version: '3'
services:
  otel-collector:
    image: otel/opentelemetry-collector:latest
    restart: always
    command: [ "--config=/etc/otel-collector-config.yaml" ]
    volumes:
      - ./.docker/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "1888:1888"   # pprof extension
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317"   # OTLP gRPC receiver
      - "55679:55679" # zpages extension

  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin-slim:latest
    restart: always
    depends_on:
      - otel-collector
    ports:
      - "9411:9411"

  goapp:
    container_name: goapp
    build:
      context: .
    restart: always
    environment:
      - TITLE=Microservice Demo
      - CONTENT=This is a demo of a microservice
      - BACKGROUND_COLOR=green
      - RESPONSE_TIME=1000
      - EXTERNAL_CALL_URL=http://goapp2:8181/weather/servico-b
      - EXTERNAL_CALL_METHOD=GET
      - REQUEST_NAME_OTEL=microservice-demo-request
      - OTEL_SERVICE_NAME=microservice-demo
      - OTEL_EXPORTER_OTLP_ENDPOINT=otel-collector:4317
      - WEB_SERVER_PORT=:8080
      - WEATHER_API_KEY=3e911140d0214dd8bb622421250705
    ports:
      - "8080:8080"
    depends_on:
      - zipkin
      - otel-collector

  goapp2:
    container_name: goapp2
    build:
      context: .
    restart: always
    environment:
      - TITLE=Microservice Demo 2
      - CONTENT=This is a demo of a microservice
      - BACKGROUND_COLOR=green
      - RESPONSE_TIME=2000
      - REQUEST_NAME_OTEL=microservice-demo2-request
      - OTEL_SERVICE_NAME=microservice-demo2
      - OTEL_EXPORTER_OTLP_ENDPOINT=otel-collector:4317
      - WEB_SERVER_PORT=:8181
      - WEATHER_API_KEY=3e911140d0214dd8bb622421250705
    ports:
      - "8181:8181"
    depends_on:
      - goapp